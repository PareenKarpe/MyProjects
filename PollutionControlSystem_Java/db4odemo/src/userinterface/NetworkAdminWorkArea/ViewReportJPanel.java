/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NetworkAdminWorkArea;

import Business.EcoSystem;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JPanel;
import Business.Severity;
import Business.Baseline;
import java.awt.Color;
import org.jfree.chart.ChartFrame;
import Business.Analysis.PopulateChart;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.supervisorOrganisation;
import Business.WorkQueue.SoilTestWorkRequest;
import Business.WorkQueue.WaterTestingWorkRequest;
import javax.swing.JOptionPane;
import userinterface.SystemAdminWorkArea.SysadminWorkArea;


/**
 *
 * @author cc130tx
 */
public class ViewReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewReportJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
     private Network network;
    private UserAccount userAccount;
    private WorkRequest request;
    private Severity   sevCal;
    private Baseline baseline;
     PopulateChart populatechart;
    
    public ViewReportJPanel(JPanel userProcessContainer,UserAccount userAccount, Network network, EcoSystem system,WorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;   
        this.network = network;
        this.userAccount = userAccount;
        
        this.request = request;
        sevCal = new Severity();
        baseline = new Baseline();
         this.populatechart = new PopulateChart();
        populateValues();
      
        calculateSeverity();
       visibleHandling();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        reportNameLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        solutionButton = new javax.swing.JToggleButton();
        backJButton = new javax.swing.JButton();
        enterpriseLabel1 = new javax.swing.JLabel();
        LabelEnterprise = new javax.swing.JLabel();
        enterpriseLabel6 = new javax.swing.JLabel();
        enterpriseLabel3 = new javax.swing.JLabel();
        LabelRequestName = new javax.swing.JLabel();
        LabelDate = new javax.swing.JLabel();
        enterpriseLabel2 = new javax.swing.JLabel();
        enterpriseLabel4 = new javax.swing.JLabel();
        labelSeverity = new javax.swing.JLabel();
        LabelSource = new javax.swing.JLabel();
        PieFrame = new javax.swing.JInternalFrame();
        Text1 = new javax.swing.JTextField();
        Text2 = new javax.swing.JTextField();
        Text3 = new javax.swing.JTextField();
        Text4 = new javax.swing.JTextField();
        Text5 = new javax.swing.JTextField();
        Label5 = new javax.swing.JLabel();
        Label4 = new javax.swing.JLabel();
        Label3 = new javax.swing.JLabel();
        Label2 = new javax.swing.JLabel();
        Label1 = new javax.swing.JLabel();
        jButtonForward = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAdditional = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        Buttonsubmit = new javax.swing.JButton();

        solutionButton.setText("Solution");
        solutionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solutionButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        enterpriseLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel1.setText("Enterprise");

        LabelEnterprise.setText("jLabel2");

        enterpriseLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel6.setText("Readings Date/Time");

        enterpriseLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel3.setText("Report Name");

        LabelRequestName.setText("jLabel2");

        LabelDate.setText("jLabel2");

        enterpriseLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel2.setText("Source of Request");

        enterpriseLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel4.setText("Severity");

        labelSeverity.setText("jLabel2");

        LabelSource.setText("jLabel2");

        PieFrame.setVisible(true);

        javax.swing.GroupLayout PieFrameLayout = new javax.swing.GroupLayout(PieFrame.getContentPane());
        PieFrame.getContentPane().setLayout(PieFrameLayout);
        PieFrameLayout.setHorizontalGroup(
            PieFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
        );
        PieFrameLayout.setVerticalGroup(
            PieFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 587, Short.MAX_VALUE)
        );

        Text1.setEditable(false);
        Text1.setText("jTextField1");

        Text2.setEditable(false);
        Text2.setText("jTextField1");

        Text3.setEditable(false);
        Text3.setText("jTextField1");

        Text4.setEditable(false);
        Text4.setText("jTextField1");

        Text5.setEditable(false);
        Text5.setText("jTextField1");

        Label5.setText("jLabel2");

        Label4.setText("jLabel2");

        Label3.setText("jLabel2");

        Label2.setText("jLabel2");

        Label1.setText("jLabel2");

        jButtonForward.setText("Forward");
        jButtonForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonForwardActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Traffic congestion mitigation ");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Enforce air pollution rules");

        jCheckBox3.setText("Emergency  public health interventions");

        jCheckBox4.setText("Weekly Monitoring Values");

        textAdditional.setColumns(20);
        textAdditional.setRows(5);
        jScrollPane2.setViewportView(textAdditional);

        jLabel3.setText("Comments or Additional Solution");

        Buttonsubmit.setText("Submit");
        Buttonsubmit.setEnabled(false);
        Buttonsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonsubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(108, 108, 108)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(enterpriseLabel3)
                                        .addGap(49, 49, 49)
                                        .addComponent(LabelRequestName, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(96, 96, 96)
                                .addComponent(reportNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(261, 261, 261)
                                .addComponent(solutionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonForward, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(Buttonsubmit))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addComponent(PieFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox1)
                                    .addComponent(jCheckBox2)
                                    .addComponent(jCheckBox3)
                                    .addComponent(jCheckBox4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(enterpriseLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(LabelEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 292, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(enterpriseLabel4)
                                    .addGap(45, 45, 45))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(enterpriseLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(LabelDate)
                                    .addGap(135, 135, 135)
                                    .addComponent(enterpriseLabel2)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(labelSeverity))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(LabelSource)))
                            .addGap(46, 46, 46))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Label2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Label3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Label4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Label5, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Text3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Text5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(923, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enterpriseLabel3)
                            .addComponent(LabelRequestName)))
                    .addComponent(reportNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jCheckBox1)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox2)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox3)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox4)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addComponent(PieFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(solutionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonForward, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Buttonsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(77, 77, 77))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(enterpriseLabel4)
                        .addComponent(labelSeverity))
                    .addGap(35, 35, 35)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(enterpriseLabel1)
                        .addComponent(LabelEnterprise)
                        .addComponent(enterpriseLabel6)
                        .addComponent(LabelDate)
                        .addComponent(enterpriseLabel2)
                        .addComponent(LabelSource))
                    .addGap(98, 98, 98)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Label2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Text2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Label3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Text3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Label4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Text4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(27, 27, 27)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Label5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Text5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(569, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents
public void visibleHandling()
{
    if(userAccount.getUsername().equalsIgnoreCase("sysadmin"))
         {
             jButtonForward.setVisible(false);
             
         }
   
    else
    {
       
        jButtonForward.setVisible(true);
    }
    
}
    
    public void populateValues()
    {
        //Set the color and visibility for Text Field
         Text1.setBackground(Color.white);
         Text2.setBackground(Color.white);
         Text3.setBackground(Color.white);
         Text4.setBackground(Color.white);
         Text5.setBackground(Color.white);
        
         jCheckBox1.setVisible(false);
          jCheckBox2.setVisible(false);
          jCheckBox3.setVisible(false);
          jCheckBox4.setVisible(false);
          jLabel3.setVisible(false);
          textAdditional.setVisible(false);
   
       //AIR ENTERPRISE
          //System.out.print("a--"+request.getEnterprise().getName());
        System.out.println(request.getEnterprise());
        if(request.getEnterprise().toString().equalsIgnoreCase("Air"))//|| request.getEnterprise().toString().equalsIgnoreCase("Mun")
        {
           /*System.out.print("Airrrrrr");
           System.out.print("a"+request.getEnterprise().getName());*/
            LabelEnterprise.setText("Air");
            LabelSource.setText(request.getSender().getUsername());
            LabelDate.setText(request.getRequestDate().toString());

            LabTestWorkRequest airReq = (LabTestWorkRequest) request;
            LabelRequestName.setText("Air"+"  "+airReq.getLocation()+"");

            Label1.setText("Carbon Monoxide");
            Text1.setText(String.valueOf(airReq.getResultAirCarbonM()));


            Label2.setText("Nitrogen Oxide");
            Text2.setText(String.valueOf(airReq.getResultAirNitrogenO()));

            Label3.setText("Ozone");
            Text3.setText(String.valueOf(airReq.getResultAirOzone()));

            Label4.setText("RSPM");
            Text4.setText(String.valueOf(airReq.getResultAirRspm()));

            Label5.setText("Sulphur Oxide");
            Text5.setText(String.valueOf(airReq.getResultAirSulphurO()));
        }
        
        //SOIL ENTERPRISE
        if(request.getEnterprise().toString().equalsIgnoreCase("Soil"))
        {
           /*System.out.print("Airrrrrr");
           System.out.print("a"+request.getEnterprise().getName());*/
            LabelEnterprise.setText("Soil");
            LabelSource.setText(request.getSender().getUsername());
            LabelDate.setText(request.getRequestDate().toString());

            SoilTestWorkRequest soilReq = (SoilTestWorkRequest) request;
            LabelRequestName.setText("Soil"+"  "+soilReq.getLocation()+"");

            Label1.setText("PVC");
            Text1.setText(String.valueOf(soilReq.getPvc()));


            Label2.setText("Aluminium");
            Text2.setText(String.valueOf(soilReq.getAluminium()));

            Label3.setText("Hydrocarbons");
            Text3.setText(String.valueOf(soilReq.getHydrocarbons()));

            Label4.setText("DDT");
            Text4.setText(String.valueOf(soilReq.getDdt()));

            Label5.setText("PCBS");
            Text5.setText(String.valueOf(soilReq.getPcbs()));
        }
        
        //WATER ENTERPRISE
        if(request.getEnterprise().toString().equalsIgnoreCase("Water"))
        {
           /*System.out.print("Airrrrrr");
           System.out.print("a"+request.getEnterprise().getName());*/
            LabelEnterprise.setText("Water");
            LabelSource.setText(request.getSender().getUsername());
            LabelDate.setText(request.getRequestDate().toString());

            WaterTestingWorkRequest waterReq = (WaterTestingWorkRequest) request;
            LabelRequestName.setText("Water"+"  "+waterReq.getLocation()+"");

            Label1.setText("Lead");
            Text1.setText(String.valueOf(waterReq.getLeadReading()));

            Label2.setText("Mercury");
            Text2.setText(String.valueOf(waterReq.getMercuryReading()));

            Label3.setText("Crude Oil");
            Text3.setText(String.valueOf(waterReq.getCrudeOilReading()));

            Label4.setText("Plastic");
            Text4.setText(String.valueOf(waterReq.getPlasticReading()));

            Label5.setText("Uranium");
            Text5.setText(String.valueOf(waterReq.getUraniumReading()));
        }
      
    }
    
public void calculateSeverity()
{
    //AIR ENTERPRISE
    if(request.getEnterprise().toString().equalsIgnoreCase("Air") ){//|| request.getEnterprise().toString().equalsIgnoreCase("Muncipal")
   // Text1.setBackground(Color.red);
     LabTestWorkRequest airReq = (LabTestWorkRequest) request;
     double AirdiffCarbonM =airReq.getResultAirCarbonM()- baseline.getBaseAirCarbonM();
     double AirdiffNitrogenO =    airReq.getResultAirNitrogenO() - baseline.getBaseAirNitrogenO();
     double AirdiffOzone = airReq.getResultAirOzone() - baseline.getBaseAirOzone();
     double Airdiffrspm = airReq.getResultAirRspm() - baseline.getBaseAirRspm();
     double AirdiffSulphurO = airReq.getResultAirSulphurO() - baseline.getBaseAirSulphurO();
    /* System.out.println(AirdiffCarbonM);
      System.out.println(AirdiffNitrogenO);
       System.out.println(AirdiffOzone);
        System.out.println(Airdiffrspm);
         System.out.println(AirdiffSulphurO);*/
     
     if(AirdiffCarbonM >= sevCal.getMSevereAirCarbonM() || AirdiffNitrogenO >= sevCal.getMSevereAirNitrogenO() || AirdiffOzone >= sevCal.getMSevereAirOzone() || Airdiffrspm >= sevCal.getMHevereAirRspm() || AirdiffSulphurO >= sevCal.getMSevereAirSulphurO())    
     {
         labelSeverity.setText("High");
         solutionButton.setEnabled(false);
         jButtonForward.setVisible(true);
     }
    
    else
     {
          labelSeverity.setText("Moderate");
         solutionButton.setEnabled(true);
         jButtonForward.setEnabled(false);
     }
    
    if(AirdiffCarbonM >= sevCal.getLSevereAirCarbonM())
    {
       Text1.setBackground(Color.yellow);
    }
   
    if(AirdiffNitrogenO >= sevCal.getLSevereAirNitrogenO())
    
    {
        Text2.setBackground(Color.yellow);
        
    }
    
    
    if(AirdiffOzone >= sevCal.getLSevereAirOzone())
    
    {
        Text3.setBackground(Color.yellow);
        
    }
    
    if(AirdiffSulphurO >= sevCal.getLSevereAirSulphurO())
    
    {
        Text4.setBackground(Color.yellow);
        
    }
    
    if(Airdiffrspm >= sevCal.getLSevereAirRspm())
    
    {
        Text5.setBackground(Color.yellow);
        
    }
    
    //pie chart and bargraph
     
         if(userAccount.getUsername().equalsIgnoreCase("sysadmin"))
         {
             //bar graph code and button visibility
         
         ChartFrame frame = populatechart.populateBarGraph(network, airReq.getEnterprise(), airReq);
                PieFrame.setSize(600, 450);
                PieFrame.getContentPane().add(frame.getChartPanel());
                
                solutionButton.setEnabled(true);
                jButtonForward.setVisible(false); 
             
         }
         //pie chart
         else{ChartFrame frame = populatechart.populatePieChart(airReq.getEnterprise(),airReq.getResultAirCarbonM(),airReq.getResultAirOzone(),airReq.getResultAirRspm(),airReq.getResultAirNitrogenO(),airReq.getResultAirSulphurO());
           PieFrame.setSize(400,450);
           PieFrame.getContentPane().add(frame.getChartPanel());  
    
         }
    } 
    
    //SOIL ENTERPRISE
    if(request.getEnterprise().toString().equalsIgnoreCase("Soil") ){//|| request.getEnterprise().toString().equalsIgnoreCase("Muncipal")
   // Text1.setBackground(Color.red);
     SoilTestWorkRequest soilReq = (SoilTestWorkRequest) request;
     double SoildiffPVC = soilReq.getPvc()- baseline.getBasePVC();
     double SoildiffAluminium =    soilReq.getAluminium() - baseline.getBaseAluminium();
     double SoildiffHydrocarbons = soilReq.getHydrocarbons() - baseline.getBaseHydrocarbons();
     double SoildiffDDT = soilReq.getDdt() - baseline.getBaseDDT();
     double SoildiffPCBS = soilReq.getPcbs() - baseline.getBasePCBS();
     
     if(SoildiffPVC >= sevCal.getMSevereAirCarbonM() || SoildiffAluminium >= sevCal.getMSevereAirNitrogenO() || SoildiffHydrocarbons >= sevCal.getMSevereAirOzone() || SoildiffDDT >= sevCal.getMHevereAirRspm() || SoildiffPCBS >= sevCal.getMSevereAirSulphurO())    
     {
         labelSeverity.setText("High");
         solutionButton.setEnabled(false);
         jButtonForward.setVisible(true);
     }
    
    else
     {
          labelSeverity.setText("Moderate");
         solutionButton.setEnabled(true);
         jButtonForward.setEnabled(false);
     }
    
    if(SoildiffPVC >= sevCal.getLSevereAirCarbonM())
    {
       Text1.setBackground(Color.yellow);
    }
   
    if(SoildiffAluminium >= sevCal.getLSevereAirNitrogenO())
    
    {
        Text2.setBackground(Color.yellow);
        
    }
    
    
    if(SoildiffHydrocarbons >= sevCal.getLSevereAirOzone())
    
    {
        Text3.setBackground(Color.yellow);
        
    }
    
    if(SoildiffDDT >= sevCal.getLSevereAirSulphurO())
    
    {
        Text4.setBackground(Color.yellow);
        
    }
    
    if(SoildiffPCBS >= sevCal.getLSevereAirRspm())
    
    {
        Text5.setBackground(Color.yellow);
        
    }
    
    //pie chart and bargraph
     
         if(userAccount.getUsername().equalsIgnoreCase("sysadmin"))
         {
             //bar graph code and button visibility
             ChartFrame frame = populatechart.populateBarGraph(network, soilReq.getEnterprise(), soilReq);
                PieFrame.setSize(600, 450);
                PieFrame.getContentPane().add(frame.getChartPanel());
         solutionButton.setEnabled(true);
         jButtonForward.setVisible(false);
             
         }
         //pie chart
         else{ChartFrame frame = populatechart.populatePieChart(soilReq.getEnterprise(),soilReq.getPvc(),soilReq.getAluminium(),soilReq.getHydrocarbons(),soilReq.getDdt(),soilReq.getPcbs());
         PieFrame.setSize(400,450);
         PieFrame.getContentPane().add(frame.getChartPanel());  
    
         }
    } 
    
    
    //WATER ENTERPRISE
    if(request.getEnterprise().toString().equalsIgnoreCase("Water") ){//|| request.getEnterprise().toString().equalsIgnoreCase("Muncipal")
   // Text1.setBackground(Color.red);
     WaterTestingWorkRequest waterReq = (WaterTestingWorkRequest) request;
     double WaterdiffLead = waterReq.getLeadReading()- baseline.getBaseLead();
     double WaterdiffPlastic = waterReq.getPlasticReading() - baseline.getBasePlastic();
     double WaterdiffMercury = waterReq.getMercuryReading() - baseline.getBaseMercury();
     double WaterdiffCrude = waterReq.getCrudeOilReading() - baseline.getBaseCrude();
     double SoildiffUranium = waterReq.getUraniumReading() - baseline.getBaseUranium();
     
     if(WaterdiffLead >= sevCal.getMSevereAirCarbonM() || WaterdiffPlastic >= sevCal.getMSevereAirNitrogenO() || WaterdiffMercury >= sevCal.getMSevereAirOzone() || WaterdiffCrude >= sevCal.getMHevereAirRspm() || SoildiffUranium >= sevCal.getMSevereAirSulphurO())    
     {
         labelSeverity.setText("High");
         solutionButton.setEnabled(false);
         jButtonForward.setVisible(true);
     }
    
    else
     {
          labelSeverity.setText("Moderate");
         solutionButton.setEnabled(true);
         jButtonForward.setEnabled(false);
     }
    
    if(WaterdiffLead >= sevCal.getLSevereAirCarbonM())
    {
       Text1.setBackground(Color.yellow);
    }
   
    if(WaterdiffPlastic >= sevCal.getLSevereAirNitrogenO())
    
    {
        Text2.setBackground(Color.yellow);
        
    }
    
    
    if(WaterdiffMercury >= sevCal.getLSevereAirOzone())
    
    {
        Text3.setBackground(Color.yellow);
        
    }
    
    if(WaterdiffCrude >= sevCal.getLSevereAirSulphurO())
    
    {
        Text4.setBackground(Color.yellow);
        
    }
    
    if(SoildiffUranium >= sevCal.getLSevereAirRspm())
    
    {
        Text5.setBackground(Color.yellow);
        
    }
    
    //pie chart and bargraph
     
         if(userAccount.getUsername().equalsIgnoreCase("sysadmin"))
         {
             //bar graph code and button visibility
        ChartFrame frame = populatechart.populateBarGraph(network, waterReq.getEnterprise(), waterReq);
        PieFrame.setSize(600, 450);
        PieFrame.getContentPane().add(frame.getChartPanel());
         solutionButton.setEnabled(true);
         jButtonForward.setVisible(false);
             
         }
         //pie chart
         else{ChartFrame frame = populatechart.populatePieChart(waterReq.getEnterprise(),waterReq.getLeadReading(),waterReq.getMercuryReading(),waterReq.getCrudeOilReading(),waterReq.getUraniumReading(),waterReq.getPlasticReading());
         PieFrame.setSize(400,450);
         PieFrame.getContentPane().add(frame.getChartPanel());  
    
         }
    }
}
    
    private void solutionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solutionButtonActionPerformed
        // TODO add your handling code here:
         Buttonsubmit.setEnabled(true);
          jCheckBox1.setVisible(true);
          jCheckBox2.setVisible(true);
          jCheckBox3.setVisible(true);
          jCheckBox4.setVisible(true);
          jLabel3.setVisible(true);
          textAdditional.setVisible(true);
        if(userAccount.getUsername().equalsIgnoreCase("sysadmin"))
         {
             jButtonForward.setVisible(false);
             
         
            //AIR ENTERPRISE SOLUTIONS BY ADMIN
            if(request.getEnterprise().getName().equalsIgnoreCase("air"))
            {
                jCheckBox1.setText( "Declare the air pollution control areas in public.");
                jCheckBox2.setText( "Give instructions for ensuring standards for emission from automobiles.");
                jCheckBox3.setText( "Installation of control equipment and chimney as per the directions given by State Board");
                jCheckBox4.setText( "A budget should be shared to implement the pollution control measures");
            }    
            //WATER ENTERPRISE SOLUTIONS BY ADMIN
            if(request.getEnterprise().getName().equalsIgnoreCase("water"))
            {
                jCheckBox1.setText( "Declare the Water pollution control areas in public.");
                jCheckBox2.setText( "Impose penalty for polluting waterbodies");
                jCheckBox3.setText( "Implement oil pipeline surveys after every 6 months ");
                jCheckBox4.setText( "A budget should be shared to implement the pollution control measures");
            }

            if(request.getEnterprise().getName().equalsIgnoreCase("soil"))
            {
                jCheckBox1.setText( "Declare the Soil pollution control areas in public.");
                jCheckBox2.setText( "Ban plastic below 20 microns thickness (Non-Recycled)");
                jCheckBox3.setText( "Ban on deforestation");
                jCheckBox4.setText( "A budget should be shared to implement the pollution control measures");
            }
        
        }
        else
        {
            //NETWORK ADMIN SOLUTIONS
            if(request.getEnterprise().toString().equalsIgnoreCase("Air"))//|| request.getEnterprise().toString().equalsIgnoreCase("Muncipal"))
            {
              LabTestWorkRequest airReq = (LabTestWorkRequest) request;
            }
            if(request.getEnterprise().getName().equalsIgnoreCase("Water"))
            {
                jCheckBox1.setText( "Send legal notices to Industrial Areas for handling waste");
                jCheckBox2.setText( "Improve sewage-management in the near-by areas");
                jCheckBox3.setText( "Disinfection for killing Bacteria viruses");
                jCheckBox4.setText( "Filtration of contaminated water");
            }
            if(request.getEnterprise().getName().equalsIgnoreCase("Soil"))
            {
                jCheckBox1.setText( "Implementing penalty for improper disposal of Plastics");
                jCheckBox2.setText( "Encourage plantation programs");
                jCheckBox3.setText( "Make organiz fertilizers available at cheap rates");
                jCheckBox4.setText( "Implementation of Chemical Fixation for contaminated Soil");
            }
        
 //enable  checkbox
        }
    }//GEN-LAST:event_solutionButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
         userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
       if(userAccount.getUsername().equalsIgnoreCase("sysadmin"))
       {
           SysadminWorkArea SysadminWorkArea = (SysadminWorkArea) component;
       }
       else
       {
            MyWorkAreaJPanel myWorkAreaJPanel = (MyWorkAreaJPanel) component; 
       }
      
        //netAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void ButtonsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonsubmitActionPerformed
         // TODO add your handling code here:
        
       request.setStatus("Solved");
       request.setSolutionProvider(userAccount.getUsername());
        //System.out.print(userAccount.getUsername());
       if(userAccount.getUsername().equalsIgnoreCase("sysadmin"))
       {
           //for system admin   
       
            if(jCheckBox1.isSelected()==false && jCheckBox2.isSelected()==false && jCheckBox3.isSelected()==false && jCheckBox4.isSelected()==false &&textAdditional.getText().length()==0)
            {
        
                JOptionPane.showMessageDialog(null, "Select atleast one checkbox or Mention some comments/additional solution", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } 
   
        
        if(jCheckBox1.isSelected()==true)
        {
            request.getSolution().setSol5(true);
        }
        if(jCheckBox2.isSelected()==true)
        {
            request.getSolution().setSol6(true);
        }
          if(jCheckBox3.isSelected()==true)
        {
            request.getSolution().setSol7(true);
        }

          if(jCheckBox4.isSelected()==true)
        {
            request.getSolution().setSol8(true);
        }
          request.getSolution().setTextAdditional(textAdditional.getText());
          System.out.print("network:"+network);
          
          for (Enterprise e : request.getNetwork().getEnterpriseDirectory().getEnterpriseList()) 
               {
                   if(e.getEnterpriseType().getValue().equalsIgnoreCase("municipal"))
                   {
                       Organization org=null;


                       for (Organization organization : e.getOrganizationDirectory().getOrganizationList())
                       {
                             //  System.out.println("1");
                           if (organization instanceof supervisorOrganisation){
                           org = organization;
                           break;
                       }

                       }  

                       if(org!=null){
                        //  System.out.println(e1);
                          //System.out.println(request.getMessage());

                       //   System.out.println("Sender"+ request.getSender());
                           System.out.print(request.getSender().getUsername());
                           if(request.getSender().getUsername().contains("mun"))
                           {
                            //   continue;
                           }
                           else{
                       org.getWorkQueue().getWorkRequestList().add(request);
                        e.getOrganizationDirectory().getOrganizationList().get(0).getUserAccountDirectory().getUserAccountList().get(0).getWorkQueue().getWorkRequestList().add(request);
                           }
                    //System.out.print(e1.getOrganizationDirectory().getOrganizationList().get(0).getUserAccountDirectory().getUserAccountList().get(0));

                     //  userAccount.getWorkQueue().getWorkRequestList().add(request2);
                       JOptionPane.showMessageDialog(null, "Request is Solved", "Success", JOptionPane.INFORMATION_MESSAGE);
Buttonsubmit.setEnabled(false);
                     }    
                       break;
                   }
                   else
                   {
                       continue;
                   }  
               }


        }
        else{
               //for network
                if(jCheckBox1.isSelected()==false && jCheckBox2.isSelected()==false && jCheckBox3.isSelected()==false && jCheckBox4.isSelected()==false &&textAdditional.getText().length()==0)
                {

                   JOptionPane.showMessageDialog(null, "Select atleast one checkbox or Mention some comments/additional solution", "Error", JOptionPane.ERROR);
                   return;
                } 

        //LabTestWorkRequest airReq = (LabTestWorkRequest) request;

        if(jCheckBox1.isSelected()==true)
        {
            request.getSolution().setSol1(true);
        }
        if(jCheckBox2.isSelected()==true)
        {
            request.getSolution().setSol2(true);
        }
          if(jCheckBox3.isSelected()==true)
        {
            request.getSolution().setSol3(true);
        }

        if(jCheckBox4.isSelected()==true)
        {
            request.getSolution().setSol4(true);
        }
          request.getSolution().setTextAdditional(textAdditional.getText());


          for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) 
               {
                   if(e.getEnterpriseType().getValue().equalsIgnoreCase("municipal"))
                   {
                       Organization org=null;


                       for (Organization organization : e.getOrganizationDirectory().getOrganizationList())
                       {
                             //  System.out.println("1");
                           if (organization instanceof supervisorOrganisation){
                           org = organization;
                           break;
                       }

                       }  

                       if(org!=null){
                        //  System.out.println(e1);
                          //System.out.println(request.getMessage());

                       //   System.out.println("Sender"+ request.getSender());
                           //System.out.print(request.getSender().getUsername());
                           if(request.getSender().getUsername().contains("mun"))
                           {
                            //   continue;
                           }
                           else{
                            org.getWorkQueue().getWorkRequestList().add(request);
                            e.getOrganizationDirectory().getOrganizationList().get(0).getUserAccountDirectory().getUserAccountList().get(0).getWorkQueue().getWorkRequestList().add(request);
                           }
                    //System.out.print(e1.getOrganizationDirectory().getOrganizationList().get(0).getUserAccountDirectory().getUserAccountList().get(0));

                     //  userAccount.getWorkQueue().getWorkRequestList().add(request2);
                       JOptionPane.showMessageDialog(null, "Request is Solved", "Success", JOptionPane.INFORMATION_MESSAGE);
Buttonsubmit.setEnabled(false);
                     }    
                       break;
                   }
                   else
                   {
                       continue;
                   }  
               }
           }
    }//GEN-LAST:event_ButtonsubmitActionPerformed

    private void jButtonForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonForwardActionPerformed
        // TODO add your handling code here:
        request.setStatus("At system admin");
    //    system.getUserAccountDirectory().getUserAccountList().get(0).getWorkQueue().getWorkRequestList().add(request);
        
        for (UserAccount us : system.getUserAccountDirectory().getUserAccountList())
     {
        
         us.getWorkQueue().getWorkRequestList().add(request);
         
         JOptionPane.showMessageDialog(null, "Request is forwarded", "Success", JOptionPane.INFORMATION_MESSAGE); //us.getWorkQueue().getWorkRequestList().add(request);
      //   request.setStatus("At Admin");.
         jButtonForward.setEnabled(false);
         
     }
        
        //System.out.print( system.getUserAccountDirectory().getUserAccountList().get(0));
    }//GEN-LAST:event_jButtonForwardActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buttonsubmit;
    private javax.swing.JLabel Label1;
    private javax.swing.JLabel Label2;
    private javax.swing.JLabel Label3;
    private javax.swing.JLabel Label4;
    private javax.swing.JLabel Label5;
    private javax.swing.JLabel LabelDate;
    private javax.swing.JLabel LabelEnterprise;
    private javax.swing.JLabel LabelRequestName;
    private javax.swing.JLabel LabelSource;
    private javax.swing.JInternalFrame PieFrame;
    private javax.swing.JTextField Text1;
    private javax.swing.JTextField Text2;
    private javax.swing.JTextField Text3;
    private javax.swing.JTextField Text4;
    private javax.swing.JTextField Text5;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel enterpriseLabel2;
    private javax.swing.JLabel enterpriseLabel3;
    private javax.swing.JLabel enterpriseLabel4;
    private javax.swing.JLabel enterpriseLabel6;
    private javax.swing.JButton jButtonForward;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelSeverity;
    private javax.swing.JLabel reportNameLabel;
    private javax.swing.JToggleButton solutionButton;
    private javax.swing.JTextArea textAdditional;
    // End of variables declaration//GEN-END:variables
}
