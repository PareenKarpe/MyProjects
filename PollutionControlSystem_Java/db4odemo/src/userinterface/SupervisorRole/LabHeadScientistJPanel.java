/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SupervisorRole;

import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.HeadScientistOrganisation;
import Business.Organization.LabScientistOrganisation;
import Business.Organization.Organization;
import Business.Organization.supervisorOrganisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WaterTestingWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anuja
 */
public class LabHeadScientistJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    private WaterTestingWorkRequest requestWaterTest;
    private LabScientistOrganisation labOrg;

    /**
     * Creates new form LabHeadScientistJPanel
     */
    public LabHeadScientistJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Network network) {
        initComponents();
//        this.request=request;
        this.network=network;
        this.userProcessContainer=userProcessContainer;
        this.userAccount=account;
        this.enterprise=enterprise;
        this.organization=(HeadScientistOrganisation)organization;
        
        populateRequestTable();
        AcceptBtn.setEnabled(false);
        frwdButton.setEnabled(false);
        usernamelbl.setText(account.getUsername());
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);
        
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
            
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getReceiver();
          //  row[2] = "Queued";//request.getStatus();
           // if(!"Queued".equalsIgnoreCase(request.getStatus()))
            //{
             //   row[2]= request.getStatus();
            //}

            row[2] = request.getStatus();

            String result = "View";
            //  row[3] = result == null ? "Waiting" : result;
            //row[3] = request.getSender();
            row[3] = request.getSenderEnterprise();
            model.addRow(row);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        usernamelbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        ViewBtn = new javax.swing.JButton();
        AcceptBtn = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        frwdButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel1.setText(" Lab Department");

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel2.setText("HeadScientist Dashboard");

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel3.setText("User :");

        usernamelbl.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Sender Enterprise"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                workRequestJTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                workRequestJTableMousePressed(evt);
            }
        });
        workRequestJTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                workRequestJTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        ViewBtn.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        ViewBtn.setText("View");
        ViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBtnActionPerformed(evt);
            }
        });

        AcceptBtn.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        AcceptBtn.setText("Accept");
        AcceptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptBtnActionPerformed(evt);
            }
        });

        refreshTestJButton.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        frwdButton.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        frwdButton.setText("Forward");
        frwdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frwdButtonActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/SupervisorRole/lab.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(362, 362, 362)
                                .addComponent(jLabel2)
                                .addGap(67, 67, 67))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(116, 116, 116)))
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usernamelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshTestJButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(frwdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(AcceptBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 151, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 888, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(40, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernamelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(refreshTestJButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewBtn)
                    .addComponent(frwdButton)
                    .addComponent(AcceptBtn))
                .addGap(107, 107, 107))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void workRequestJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workRequestJTableMouseClicked
        // TODO add your handling code here:
        // JOptionPane.showMessageDialog(null, "Select all click", "Icomplete", JOptionPane.ERROR_MESSAGE);
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow < 0){
            return;
        }
        else{
            AcceptBtn.setEnabled(true);
        }
    }//GEN-LAST:event_workRequestJTableMouseClicked

    private void workRequestJTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workRequestJTableMousePressed
       int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow < 0){
            return;
        }
        
        WorkRequest req = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        
        if(req.getStatus().equals("Complete"))
        {
            frwdButton.setEnabled(true);
        }
        
    }//GEN-LAST:event_workRequestJTableMousePressed

    private void workRequestJTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_workRequestJTableKeyPressed
        // TODO add your handling code here:
        //   JOptionPane.showMessageDialog(null, "Select all", "Icomplete", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_workRequestJTableKeyPressed

    private void ViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBtnActionPerformed
        
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow < 0){
            return;
        }
        
        WorkRequest req = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        
        if (req.getSenderEnterprise().equalsIgnoreCase("Water")) {
            //System.out.println("Lab HeadScientistWorkArea - ViewJButton1ActionPerformed Network WATER ");

            requestWaterTest = (WaterTestingWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);

            //WorkRequest request = null;
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("ProcessWorkView", new ViewWaterReadingsJPanel(userProcessContainer, userAccount, enterprise, network, requestWaterTest));
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_ViewBtnActionPerformed

    private void AcceptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptBtnActionPerformed
        
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if(selectedRow < 0){
            return;
        }
        
        //Get the selected request and assign it as per the enterprise
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        request.setStatusLab("Accepted");
        
        frwdButton.setEnabled(true);
        //request.setSender(request.getSender());
        //If the request is from WaterEnterprise
        
        if(request.getSenderEnterprise().equalsIgnoreCase("water") ||(request.getSenderEnterprise().equalsIgnoreCase("municipal")))
        {
            request.setSenderEnterprise("water");
            
            System.out.println(request.getEnterprise());
            Organization org = null;
        
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
            {
                if (organization instanceof LabScientistOrganisation){
                    org = organization;
                    break;
                      }
            }
            if (org!=null)
            {
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);

                JOptionPane.showMessageDialog(null, "Request sent to Junior Scientist", "Success", JOptionPane.INFORMATION_MESSAGE);    
            } 
        }
        
        //If the request is from SoilEnterprise
        if(request.getSenderEnterprise().equalsIgnoreCase("soil") ||(request.getSenderEnterprise().equalsIgnoreCase("municipal")))
        {
            //requestSoil = (LabSoilTestWorkRequest)workRequestJTable.getValueAt(selectedRow,0);
            //request.setSenderEnterprise("Soil");
            
            //System.out.println(request.getEnterprise());
            Organization org = null;
        
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
            {
                if (organization instanceof LabScientistOrganisation){
                    org = organization;
                    break;
                      }
            }
            if (org!=null)
            {
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);

                JOptionPane.showMessageDialog(null, "Request sent to Junior Scientist", "Success", JOptionPane.INFORMATION_MESSAGE);    
            }   
        }
        
        populateRequestTable();
    }//GEN-LAST:event_AcceptBtnActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void frwdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frwdButtonActionPerformed
        // TODO add your handling code here:
            
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if(selectedRow < 0){
            return;
        }
        
        //Get the selected request and assign it as per the enterprise
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        
        //If the request is from SoilEnterprise
        if(request.getSenderEnterprise().equalsIgnoreCase("soil")|| (request.getSenderEnterprise().equalsIgnoreCase("municipal")))
        {
            //requestSoil = (LabSoilTestWorkRequest)workRequestJTable.getValueAt(selectedRow,0);
            request.setStatus("Sent By Lab");
            request.setSenderEnterprise(enterprise.getEnterpriseType().getValue());
            //request.setSender(userAccount);
            
            Organization org = null;
        
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
            {
                if (organization instanceof supervisorOrganisation){
                    org = organization;
                    break;
                      }
            }
            if (org!=null)
            {
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
            } 
            
            JOptionPane.showMessageDialog(null, "Data Forwarded to Soil Enterprise", "Success", JOptionPane.INFORMATION_MESSAGE); 
        }
        //If the request is from WaterEnterprise
        if(request.getSenderEnterprise().equalsIgnoreCase("water"))
        {
            //requestSoil = (LabSoilTestWorkRequest)workRequestJTable.getValueAt(selectedRow,0);
            request.setStatus("Sent By Lab");
            request.setSenderEnterprise(enterprise.getEnterpriseType().getValue());
            request.setSender(userAccount);
            
            Organization org = null;
        
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
            {
                if (organization instanceof supervisorOrganisation){
                    org = organization;
                    break;
                      }
            }
            if (org!=null)
            {
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
            } 
            
            JOptionPane.showMessageDialog(null, "Data Forwarded to Water Enterprise", "Success", JOptionPane.INFORMATION_MESSAGE); 
        }
    }//GEN-LAST:event_frwdButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptBtn;
    private javax.swing.JButton ViewBtn;
    private javax.swing.JButton frwdButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JLabel usernamelbl;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
