/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SupervisorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.*;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.SoilTestWorkRequest;
import Business.WorkQueue.WaterTestingWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author raunak
 */
public class RequestLabTestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Network network;
   
    /**
     * Creates new form RequestLabTestJPanel
     */
    public RequestLabTestJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise,Network network) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.network = network;
        valueLabel.setText(enterprise.getName());
       
        //System.out.print(enterprise.getEnterpriseType().getValue());
        if(enterprise.getEnterpriseType().getValue().toString().equalsIgnoreCase("Municipal"))
        {
            enterpriseTypeJComboBox.setVisible(true);
            jLabel3.setVisible(true);
            populateComboBox();
        }
        else
        {
             enterpriseTypeJComboBox.setVisible(false);
             jLabel3.setVisible(false);
        }
        
        //Disable soil parameters for raising request
        disableSoilParameters();
            
    }
     private void populateComboBox() {
        //enterpriseTypeJComboBox.removeAllItems();
//        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
//            enterpriseTypeJComboBox.addItem(type);
//        }

//       for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
//            enterpriseTypeJComboBox.addItem(e);
//        } 
        //System.out.print("network"+network.getName());
         for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
             System.out.println(e.getEnterpriseType().getValue());
            if(e.getEnterpriseType().getValue().equalsIgnoreCase(enterprise.getEnterpriseType().getValue()))
            {
                //continue;
                //System.out.println("Hi");
                //break;
            }
            else
            {
                enterpriseTypeJComboBox.addItem(e);
            }    
        }       
    }
     
     private void disableSoilParameters()
     {
         areaLabel.setVisible(false);
         resRadioBtn.setVisible(false);
         indRadioBtn.setVisible(false);
         jLabel2.setVisible(false);
         if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("air"))
         {
             locationjCombobox.setVisible(true);
         }
         else
         {
             locationjCombobox.setVisible(false);
         }
         
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        areaBtnGrp = new javax.swing.ButtonGroup();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        requestTestJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        enterpriseTypeJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        locationjCombobox = new javax.swing.JComboBox();
        areaLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgJTextArea = new javax.swing.JTextArea();
        indRadioBtn = new javax.swing.JRadioButton();
        resRadioBtn = new javax.swing.JRadioButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestTestJButton.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        requestTestJButton.setText("Request Test");
        requestTestJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 500, 130, 60));

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel1.setText("Message");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 100, 50));

        backJButton.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        backJButton.setText("<<Back");
        backJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 500, 140, 60));

        valueLabel.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 130, -1));

        enterpriseLabel.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 160, 30));

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel3.setText("Enterprise Type");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, -1, 40));

        enterpriseTypeJComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        enterpriseTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select enterprise" }));
        enterpriseTypeJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                enterpriseTypeJComboBoxItemStateChanged(evt);
            }
        });
        enterpriseTypeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseTypeJComboBoxActionPerformed(evt);
            }
        });
        add(enterpriseTypeJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 310, 230, 40));

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel2.setText("Location");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 450, 100, 20));

        locationjCombobox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        locationjCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Andheri", "Kurla", "Ghatkopar", "Mulund", "Sion", "Byculla", " " }));
        locationjCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationjComboboxActionPerformed(evt);
            }
        });
        add(locationjCombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 450, 230, -1));

        areaLabel.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        areaLabel.setText("Area");
        add(areaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 380, 90, 20));

        msgJTextArea.setColumns(20);
        msgJTextArea.setRows(5);
        jScrollPane1.setViewportView(msgJTextArea);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 280, 120));

        indRadioBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        indRadioBtn.setText("Industrial");
        indRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indRadioBtnActionPerformed(evt);
            }
        });
        add(indRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 380, -1, -1));

        resRadioBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        resRadioBtn.setText("Residential");
        resRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resRadioBtnActionPerformed(evt);
            }
        });
        add(resRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
       String message = msgJTextArea.getText();

       if(message.length() == 0)
       {
            JOptionPane.showMessageDialog(null, "All fields are mandatory", "Error", JOptionPane.ERROR_MESSAGE);
            return;
       }
        //System.out.println("Hihello");
        if(String.valueOf(enterpriseTypeJComboBox.getSelectedItem()).equalsIgnoreCase("soil")||
                enterprise.getEnterpriseType().getValue().equalsIgnoreCase("soil"))
        {
            SoilTestWorkRequest request2 = new SoilTestWorkRequest();
            request2.setMessage(message);
            request2.setSender(userAccount);
            request2.setNetwork(network);
            
            //System.out.println("Hihello1");
            if(enterprise.getEnterpriseType().getValue().toString().equalsIgnoreCase("Municipal"))
            {
                request2.setStatus("Sent by Municipal");
                request2.setEnterprise((Enterprise)enterpriseTypeJComboBox.getSelectedItem());
                request2.setSenderEnterprise(enterprise.getName());
                System.out.println(request2.getEnterprise());

            }
            else
            {
              request2.setStatus("Sent");
              request2.setEnterprise(enterprise);
              System.out.println(request2.getEnterprise());
              System.out.println("Hihello2");
            }

            request2.setLocation(locationjCombobox.getSelectedItem().toString());
         //   System.out.print(locationjCombobox.getSelectedItem().toString());
            if(indRadioBtn.isSelected())
            {
                request2.setArea(indRadioBtn.getText());
                //request2.setEnterprise((Enterprise)enterpriseTypeJComboBox.getSelectedItem());
            }
            else
            {
                request2.setArea(resRadioBtn.getText());
                //request2.setEnterprise(enterprise);
            }

            Organization org = null;

            if(enterprise.getEnterpriseType().getValue().toString().equalsIgnoreCase("Municipal"))
            {
                Enterprise e1 = (Enterprise) enterpriseTypeJComboBox.getSelectedItem();
                for (Organization organization : e1.getOrganizationDirectory().getOrganizationList())
                {
                      //  System.out.println("1");
                    if (organization instanceof supervisorOrganisation){
                    org = organization;
                    break;
                }

                }  

                if(org!=null){
                 //  System.out.println(e1);
                   //System.out.println(request.getMessage());

                //   System.out.println("Sender"+ request.getSender());
                org.getWorkQueue().getWorkRequestList().add(request2);
             //System.out.print(e1.getOrganizationDirectory().getOrganizationList().get(0).getUserAccountDirectory().getUserAccountList().get(0));
                e1.getOrganizationDirectory().getOrganizationList().get(0).getUserAccountDirectory().getUserAccountList().get(0).getWorkQueue().getWorkRequestList().add(request2);
                userAccount.getWorkQueue().getWorkRequestList().add(request2);
                JOptionPane.showMessageDialog(null, "Request is raised", "Success", JOptionPane.INFORMATION_MESSAGE);

              }    
            }
            else
            {
                Enterprise   e = enterprise;
                  for (Organization organization : e.getOrganizationDirectory().getOrganizationList())
                  {
                      if (organization instanceof staffOrganisation){
                      org = organization;
                      break;
                  }
            }

            if (org!=null)
            {
                org.getWorkQueue().getWorkRequestList().add(request2);
                userAccount.getWorkQueue().getWorkRequestList().add(request2);
                JOptionPane.showMessageDialog(null, "Request is raised", "Success", JOptionPane.INFORMATION_MESSAGE); 
                requestTestJButton.setEnabled(false);
            }   
            }     
        }
        else if(String.valueOf(enterpriseTypeJComboBox.getSelectedItem()).equalsIgnoreCase("water")||
                enterprise.getEnterpriseType().getValue().equalsIgnoreCase("water"))
        {
            WaterTestingWorkRequest request2 = new WaterTestingWorkRequest();
            request2.setMessage(message);
            request2.setSender(userAccount);
            request2.setNetwork(network);
            
            System.out.println("Hihello1");
            if(enterprise.getEnterpriseType().getValue().toString().equalsIgnoreCase("Municipal"))
            {
                request2.setStatus("Sent by Municipal");
                request2.setEnterprise((Enterprise)enterpriseTypeJComboBox.getSelectedItem());
                request2.setSenderEnterprise(enterprise.getName());
                System.out.println(request2.getEnterprise());

            }
            else
            {
              request2.setStatus("Sent");
              request2.setEnterprise(enterprise);
              System.out.println(request2.getEnterprise());
              System.out.println("Hihello2");
            }

            request2.setLocation(locationjCombobox.getSelectedItem().toString());
         //   System.out.print(locationjCombobox.getSelectedItem().toString());
            if(indRadioBtn.isSelected())
            {
                request2.setArea(indRadioBtn.getText());
                //request2.setEnterprise((Enterprise)enterpriseTypeJComboBox.getSelectedItem());
            }
            else
            {
                request2.setArea(resRadioBtn.getText());
                //request2.setEnterprise(enterprise);
            }

            Organization org = null;

            if(enterprise.getEnterpriseType().getValue().toString().equalsIgnoreCase("Municipal"))
            {
                Enterprise e1 = (Enterprise) enterpriseTypeJComboBox.getSelectedItem();
                for (Organization organization : e1.getOrganizationDirectory().getOrganizationList())
                {
                      //  System.out.println("1");
                    if (organization instanceof supervisorOrganisation){
                    org = organization;
                    break;
                }

                }  

                if(org!=null){
                 //  System.out.println(e1);
                   //System.out.println(request.getMessage());

                //   System.out.println("Sender"+ request.getSender());
                org.getWorkQueue().getWorkRequestList().add(request2);
             //System.out.print(e1.getOrganizationDirectory().getOrganizationList().get(0).getUserAccountDirectory().getUserAccountList().get(0));
                e1.getOrganizationDirectory().getOrganizationList().get(0).getUserAccountDirectory().getUserAccountList().get(0).getWorkQueue().getWorkRequestList().add(request2);
                userAccount.getWorkQueue().getWorkRequestList().add(request2);
                JOptionPane.showMessageDialog(null, "Request is raised", "Success", JOptionPane.INFORMATION_MESSAGE);

              }    
            }
            else
            {
                Enterprise   e = enterprise;
                  for (Organization organization : e.getOrganizationDirectory().getOrganizationList())
                  {
                      if (organization instanceof staffOrganisation){
                      org = organization;
                      break;
                  }
            }

            if (org!=null)
            {
                org.getWorkQueue().getWorkRequestList().add(request2);
                userAccount.getWorkQueue().getWorkRequestList().add(request2);
                JOptionPane.showMessageDialog(null, "Request is raised", "Success", JOptionPane.INFORMATION_MESSAGE); 
                requestTestJButton.setEnabled(false);
            }   
            }     
        }
        else
        {
            LabTestWorkRequest request = new LabTestWorkRequest();
            request.setMessage(message);
            request.setSender(userAccount);
           request.setNetwork(network);
           System.out.print("n1"+network);
            request.setSenderEnterprise("Air");
            System.out.print("hhhh"+enterprise);
            System.out.print(request.getSenderEnterprise());
      
            if(enterprise.getEnterpriseType().getValue().toString().equalsIgnoreCase("Municipal"))
            {
                request.setStatus("Sent by Municipal");
request.setEnterprise((Enterprise)enterpriseTypeJComboBox.getSelectedItem());
            }
            else
            {
                  request.setEnterprise(enterprise);
              request.setStatus("Sent");
            }

            request.setLocation(locationjCombobox.getSelectedItem().toString());
         //   System.out.print(locationjCombobox.getSelectedItem().toString());

            Organization org = null;

            if(enterprise.getEnterpriseType().getValue().toString().equalsIgnoreCase("Municipal"))
            {
                Enterprise e1 = (Enterprise) enterpriseTypeJComboBox.getSelectedItem();
                for (Organization organization : e1.getOrganizationDirectory().getOrganizationList())
                {
                      //  System.out.println("1");
                    if (organization instanceof supervisorOrganisation){
                    org = organization;
                    break;
                }

                }  

                if(org!=null){
                 //  System.out.println(e1);
                   //System.out.println(request.getMessage());

                //   System.out.println("Sender"+ request.getSender());
                org.getWorkQueue().getWorkRequestList().add(request);
             //System.out.print(e1.getOrganizationDirectory().getOrganizationList().get(0).getUserAccountDirectory().getUserAccountList().get(0));
                e1.getOrganizationDirectory().getOrganizationList().get(0).getUserAccountDirectory().getUserAccountList().get(0).getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
                JOptionPane.showMessageDialog(null, "Request is raised", "Success", JOptionPane.INFORMATION_MESSAGE);
                requestTestJButton.setEnabled(false);
              }    
            }
            else
            {
                Enterprise   e = enterprise;
                  for (Organization organization : e.getOrganizationDirectory().getOrganizationList())
                  {
                      if (organization instanceof staffOrganisation){
                      org = organization;
                      break;
                  }
            }

            if (org!=null)
            {
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
                JOptionPane.showMessageDialog(null, "Request is raised", "Success", JOptionPane.INFORMATION_MESSAGE); 
                requestTestJButton.setEnabled(false);
            }   
            }     
        }

         
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SupervisorWorkAreaJPanel dwjp = (SupervisorWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void enterpriseTypeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseTypeJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseTypeJComboBoxActionPerformed

    private void enterpriseTypeJComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_enterpriseTypeJComboBoxItemStateChanged
        // TODO add your handling code here:
      
//        System.out.println("combo2"+enterpriseTypeJComboBox.getSelectedItem().toString());
     if(evt.getItem().toString().equalsIgnoreCase("air"))
     {
         
         locationjCombobox.setVisible(true);
         jLabel2.setVisible(true);
     }
     else if (evt.getItem().toString().equalsIgnoreCase("soil"))
     {
         areaLabel.setVisible(true);
         resRadioBtn.setVisible(true);
         indRadioBtn.setVisible(true);
         locationjCombobox.setVisible(true);
         locationjCombobox.removeAllItems();
         jLabel2.setVisible(true); 
     }
     else if (evt.getItem().toString().equalsIgnoreCase("water"))
     {
         areaLabel.setVisible(true);
         resRadioBtn.setVisible(true);
         indRadioBtn.setVisible(true);
         locationjCombobox.setVisible(true);
         locationjCombobox.removeAllItems();
         jLabel2.setVisible(true); 
     }
     else
     {
         locationjCombobox.setVisible(false);
         jLabel2.setVisible(false);
     }
     
 
    }//GEN-LAST:event_enterpriseTypeJComboBoxItemStateChanged

    private void indRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indRadioBtnActionPerformed
        // TODO add your handling code here:
        locationjCombobox.removeAllItems();
        locationjCombobox.addItem("Andheri");
        locationjCombobox.addItem("Bhiwandi");
        locationjCombobox.addItem("Turbhe");
        locationjCombobox.addItem("Mahape");
    }//GEN-LAST:event_indRadioBtnActionPerformed

    private void resRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resRadioBtnActionPerformed
        // TODO add your handling code here:
        locationjCombobox.removeAllItems();;
        locationjCombobox.addItem("RA Colony");
        locationjCombobox.addItem("Powai");
        locationjCombobox.addItem("Mulund");
        locationjCombobox.addItem("Bandra");
        locationjCombobox.addItem("Juhu");

    }//GEN-LAST:event_resRadioBtnActionPerformed

    private void locationjComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationjComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationjComboboxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup areaBtnGrp;
    private javax.swing.JLabel areaLabel;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JComboBox enterpriseTypeJComboBox;
    private javax.swing.JRadioButton indRadioBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox locationjCombobox;
    private javax.swing.JTextArea msgJTextArea;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JRadioButton resRadioBtn;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
